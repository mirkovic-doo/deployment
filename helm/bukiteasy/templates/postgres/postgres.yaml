apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.service.name | default "postgres" }}
  namespace: {{ .Values.global.namespace | default "devops" }}
spec:
  ports:
  - port: {{ .Values.postgres.service.port | default 5432 }}
    targetPort: {{ .Values.postgres.service.port | default 5432 }}
  selector:
    app: {{ .Values.postgres.deployment.name | default "postgres" }}
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment # should be statefulSet
metadata:
  name: {{ .Values.postgres.deployment.name | default "postgres" }}
  namespace: {{ .Values.global.namespace | default "devops" }}
spec:
  replicas: {{ .Values.postgres.deployment.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.deployment.name | default "postgres" }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.deployment.name | default "postgres" }}
    spec:
      containers:
      - name: postgres
        image: postgres:14
        ports:
        - containerPort: {{ .Values.postgres.deployment.containerPort | default 5432 }}
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "accommodation"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data